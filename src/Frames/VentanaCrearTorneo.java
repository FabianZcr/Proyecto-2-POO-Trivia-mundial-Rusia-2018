/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;
import Clases.*;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Fabián
 */
public class VentanaCrearTorneo extends javax.swing.JFrame {
    DefaultListModel<String> lista1 = new DefaultListModel<>();
    DefaultListModel<String> lista2 = new DefaultListModel<>();
     public static ImageIcon foto = null;
     public ArrayList<Usuario> listaJugadores = new ArrayList<>();
    /**
     * Creates new form VentanaIniciarSesion
     */
    public VentanaCrearTorneo(Usuario aux) {
        Image icon = new ImageIcon(getClass().getResource("/Imagenes/world-cup-icon.png")).getImage();
        setIconImage(icon);
        initComponents();
        setLocationRelativeTo(null);
        labelUsuario.setText(aux.getNickname());
        listaJugadores.add(aux);
        cargarUsuarios();
        cargarUsuariosSeleccionados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        labelUsuario = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboBoxDificultad = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        textFieldCantidadDePreguntas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comoboBoxParticipantes = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        textFieldTorneoNombre = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        fondoAzul = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1087, 615));
        setResizable(false);
        getContentPane().setLayout(null);

        panelPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelPrincipal.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cantidad de preguntas:");
        panelPrincipal.add(jLabel6);
        jLabel6.setBounds(50, 290, 290, 30);

        labelUsuario.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        labelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuario.setText("Usuario");
        panelPrincipal.add(labelUsuario);
        labelUsuario.setBounds(270, 10, 220, 70);

        jLabel9.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Crear nuevo torneo");
        panelPrincipal.add(jLabel9);
        jLabel9.setBounds(130, 80, 250, 40);

        jLabel7.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Bienvenido");
        panelPrincipal.add(jLabel7);
        jLabel7.setBounds(40, 10, 220, 70);

        comboBoxDificultad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        panelPrincipal.add(comboBoxDificultad);
        comboBoxDificultad.setBounds(360, 240, 120, 30);

        jLabel10.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Jugadores seleccionados");
        panelPrincipal.add(jLabel10);
        jLabel10.setBounds(250, 350, 240, 30);
        panelPrincipal.add(textFieldCantidadDePreguntas);
        textFieldCantidadDePreguntas.setBounds(360, 290, 120, 30);

        jLabel8.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Numero de participantes:");
        panelPrincipal.add(jLabel8);
        jLabel8.setBounds(30, 190, 320, 30);

        comoboBoxParticipantes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        panelPrincipal.add(comoboBoxParticipantes);
        comoboBoxParticipantes.setBounds(360, 190, 120, 30);

        jLabel11.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Nivel de dificultad:");
        panelPrincipal.add(jLabel11);
        jLabel11.setBounds(100, 240, 260, 30);
        panelPrincipal.add(textFieldTorneoNombre);
        textFieldTorneoNombre.setBounds(360, 140, 120, 30);

        jButton4.setBackground(new java.awt.Color(153, 0, 51));
        jButton4.setForeground(new java.awt.Color(153, 0, 51));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Back.png"))); // NOI18N
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        panelPrincipal.add(jButton4);
        jButton4.setBounds(20, 400, 40, 30);

        jScrollPane1.setViewportView(jList1);

        panelPrincipal.add(jScrollPane1);
        jScrollPane1.setBounds(300, 390, 120, 120);

        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        panelPrincipal.add(jButton1);
        jButton1.setBounds(110, 540, 100, 30);

        jScrollPane2.setViewportView(jList2);

        panelPrincipal.add(jScrollPane2);
        jScrollPane2.setBounds(100, 360, 120, 170);

        jLabel12.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Nombre del torneo:");
        panelPrincipal.add(jLabel12);
        jLabel12.setBounds(100, 140, 240, 30);

        jButton2.setText("Crear!");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        panelPrincipal.add(jButton2);
        jButton2.setBounds(313, 530, 90, 30);

        fondoAzul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/wallpaper azul.jpg"))); // NOI18N
        fondoAzul.setText("jLabel4");
        fondoAzul.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelPrincipal.add(fondoAzul);
        fondoAzul.setBounds(-920, -10, 1430, 630);

        getContentPane().add(panelPrincipal);
        panelPrincipal.setBounds(0, 0, 510, 620);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Zabivaka.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(520, 10, 500, 760);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/wallpaper2.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-400, -180, 1621, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        VentanaIniciarSesion nVentanaIniciarSesion = new VentanaIniciarSesion();
        nVentanaIniciarSesion.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String n = jList2.getSelectedValue();
        if(listaJugadores.size() < 5){
            agregarJugador(n);
            cargarUsuariosSeleccionados();
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "No puede seleccionar más de 5 jugadores.");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(textFieldTorneoNombre.getText().isEmpty() | textFieldCantidadDePreguntas.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo vacío,");
        }
        else{
            String nombre = textFieldTorneoNombre.getText();
            int numeroParticipantes = comoboBoxParticipantes.getSelectedIndex();
            int nivelDificultad = comboBoxDificultad.getSelectedIndex();
            int cantidadPreguntas = Integer.parseInt(textFieldCantidadDePreguntas.getText());
            if((comoboBoxParticipantes.getSelectedIndex()+1) == 1){
                // crea torneo de 1 jugador
                if(listaJugadores.size() > 0){
                    crearTorneodeUnJugador(nombre, numeroParticipantes, nivelDificultad, cantidadPreguntas);
                    JOptionPane.showMessageDialog(rootPane, "Torneo singular creado con éxito!");
                    VentanaJuego vJuego = new VentanaJuego();
                    vJuego.setVisible(true);
                    this.dispose();
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Necesita seleccionar al menos 1 jugador!");
                }
            }
            else if ((comoboBoxParticipantes.getSelectedIndex()+1) == 2) {
                // crea torneo de 2 jugadores
                if (listaJugadores.size() > 1) {
                    crearTorneodeDosJugadores(nombre, numeroParticipantes, nivelDificultad, cantidadPreguntas);
                    JOptionPane.showMessageDialog(rootPane, "Torneo de 2 participantes  creado con éxito!");
                    VentanaJuego vJuego = new VentanaJuego();
                    vJuego.setVisible(true);
                    this.dispose();
                } 
                else {
                    JOptionPane.showMessageDialog(rootPane, "Necesita seleccionar al menos 2 jugadores!");
                }
            }
            else if ((comoboBoxParticipantes.getSelectedIndex()+1) == 3) {
                // crea torneo de 3 jugadores
                if (listaJugadores.size() > 2) {
                    crearTorneodeTresJugadores(nombre, numeroParticipantes, nivelDificultad, cantidadPreguntas);
                    JOptionPane.showMessageDialog(rootPane, "Torneo de 3 participantes creado con éxito!");
                    VentanaJuego vJuego = new VentanaJuego();
                    vJuego.setVisible(true);
                    this.dispose();
                } 
                else {
                    JOptionPane.showMessageDialog(rootPane, "Necesita seleccionar al menos 3 jugadores!");
                }
            }
            else if ((comoboBoxParticipantes.getSelectedIndex()+1) == 4) {
                // crea torneo de 4 jugadores
                if (listaJugadores.size() > 3) {
                    crearTorneodeCuatroJugadores(nombre, numeroParticipantes, nivelDificultad, cantidadPreguntas);
                    JOptionPane.showMessageDialog(rootPane, "Torneo de 4 participantes creado con éxito!");
                    VentanaJuego vJuego = new VentanaJuego();
                    vJuego.setVisible(true);
                    this.dispose();
                } 
                else {
                    JOptionPane.showMessageDialog(rootPane, "Necesita seleccionar al menos 4 jugadores!");
                }
            }
            else if ((comoboBoxParticipantes.getSelectedIndex()+1) == 5){
                // crea torneo de 5 jugadores
                if (listaJugadores.size() > 4) {
                    crearTorneodeCincoJugadores(nombre, numeroParticipantes, nivelDificultad, cantidadPreguntas);
                    JOptionPane.showMessageDialog(rootPane, "Torneo de 5 participantes creado con éxito!");
                    VentanaJuego vJuego = new VentanaJuego();
                    vJuego.setVisible(true);
                    this.dispose();
                } 
                else {
                    JOptionPane.showMessageDialog(rootPane, "Necesita seleccionar al menos 5 jugadores!");
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxDificultad;
    private javax.swing.JComboBox<String> comoboBoxParticipantes;
    private javax.swing.JLabel fondoAzul;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextField textFieldCantidadDePreguntas;
    private javax.swing.JTextField textFieldTorneoNombre;
    // End of variables declaration//GEN-END:variables
 
    // esta funcion carga todos los usuarios en un jlist
    public void cargarUsuarios(){
        lista1.clear();
        for(int i = 0; i < Registros.getInstance().listaUsuarios.size(); i++){
            lista1.addElement(Registros.getInstance().listaUsuarios.get(i).getNickname());
        }
        jList2.setModel(lista1);
    }
    // esta funcion carga todos los jugadores seleccionado en un jlist
    public void cargarUsuariosSeleccionados(){
        lista2.clear();
        for(int i = 0; i < listaJugadores.size(); i++){
            lista2.addElement(listaJugadores.get(i).getNickname());
        }
        jList1.setModel(lista2);
    }
    
    // esta función verifica que no se repitan los jugadores a jugar y los agrega al grupo
    public boolean agregarJugador(String nickname){
        for(int i = 0; i < listaJugadores.size(); i++){
            if(listaJugadores.get(i).getNickname().equals(nickname)){
                JOptionPane.showMessageDialog(rootPane, "Este usuario ya fue seleccionado, escoja otro por favor.");
                return false;
            }
        }
        Usuario nuevoJugador = Registros.getInstance().buscarUsuario(nickname);
        listaJugadores.add(nuevoJugador);
        JOptionPane.showMessageDialog(rootPane, "Jugador: " + nickname + " seleccionado con éxito.");
        return true;
    }
    
    
    // metodo para crear un torneo de 1 solo jugador
    public void crearTorneodeUnJugador(String nombre, int numeroParticipantes, int nivelDificultad, int cantidadPreguntas){
        ArrayList<Usuario> auxJugadores = new ArrayList<>();
        auxJugadores.add(listaJugadores.get(0));    // unico jugador
        Torneo nuevoTorneo = new Torneo(nombre, numeroParticipantes,auxJugadores, nivelDificultad, cantidadPreguntas);
        Registros.getInstance().setTorneoActual(nuevoTorneo);
    }
    
    // metodo para crear un torneo de 2 jugadores
    public void crearTorneodeDosJugadores(String nombre, int numeroParticipantes, int nivelDificultad, int cantidadPreguntas){
        ArrayList<Usuario> auxJugadores = new ArrayList<>();
        auxJugadores.add(listaJugadores.get(0));  // jugador 1
        auxJugadores.add(listaJugadores.get(1));  // jugador 2
        Torneo nuevoTorneo = new Torneo(nombre, numeroParticipantes,auxJugadores, nivelDificultad, cantidadPreguntas);
        Registros.getInstance().setTorneoActual(nuevoTorneo);
    }
    
    // metodo para crear un torneo de 3 jugadores
    public void crearTorneodeTresJugadores(String nombre, int numeroParticipantes, int nivelDificultad, int cantidadPreguntas){
        ArrayList<Usuario> auxJugadores = new ArrayList<>();
        auxJugadores.add(listaJugadores.get(0)); // jugador 1
        auxJugadores.add(listaJugadores.get(1)); // jugador 2
        auxJugadores.add(listaJugadores.get(2)); // jugador 3
        Torneo nuevoTorneo = new Torneo(nombre, numeroParticipantes,auxJugadores, nivelDificultad, cantidadPreguntas);
        Registros.getInstance().setTorneoActual(nuevoTorneo);
    }
    
    // metodo para crear un torneo de 4 jugadores
    public void crearTorneodeCuatroJugadores(String nombre, int numeroParticipantes, int nivelDificultad, int cantidadPreguntas){
        ArrayList<Usuario> auxJugadores = new ArrayList<>();
        auxJugadores.add(listaJugadores.get(0)); // jugador 1
        auxJugadores.add(listaJugadores.get(1)); // jugador 2
        auxJugadores.add(listaJugadores.get(2)); // jugador 3
        auxJugadores.add(listaJugadores.get(3)); // jugador 4
        Torneo nuevoTorneo = new Torneo(nombre, numeroParticipantes,auxJugadores, nivelDificultad, cantidadPreguntas);
        Registros.getInstance().setTorneoActual(nuevoTorneo);
    }
    
    // metodo para crear un torneo de 4 jugadores
    public void crearTorneodeCincoJugadores(String nombre, int numeroParticipantes, int nivelDificultad, int cantidadPreguntas){
        ArrayList<Usuario> auxJugadores = new ArrayList<>();
        auxJugadores.add(listaJugadores.get(0)); // jugador 1
        auxJugadores.add(listaJugadores.get(1)); // jugador 2
        auxJugadores.add(listaJugadores.get(2)); // jugador 3
        auxJugadores.add(listaJugadores.get(3)); // jugador 4
        auxJugadores.add(listaJugadores.get(4)); // jugador 5
        Torneo nuevoTorneo = new Torneo(nombre, numeroParticipantes,auxJugadores, nivelDificultad, cantidadPreguntas);
        Registros.getInstance().setTorneoActual(nuevoTorneo);
    }
   
}
